// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"user/internal/conf"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	/*	db, err := data.NewGormDB(confData)
		if err != nil {
			return nil, nil, err
		}
		dataData, cleanup, err := data.NewData(confData, db, logger)
		if err != nil {
			return nil, nil, err
		}
		dizCommentServiceImpl := comment.NewDizCommentServiceImpl(dataData)
		commentActionService := service.NewCommentActionService(dizCommentServiceImpl)
		commentListService := service.NewCommentListService(dizCommentServiceImpl)
		grpcServer := server.NewGRPCServer(confServer, commentActionService, commentListService, logger)
		httpServer := server.NewHTTPServer(confServer, commentActionService, commentListService, logger)
		app := newApp(logger, grpcServer, httpServer)
		return app, func() {
			cleanup()
		}, nil*/

}
